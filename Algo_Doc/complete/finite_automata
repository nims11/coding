Finite Automata String Matching

State -> Represents how much of the pattern has matched as the suffix of the string at any index. Usually the length of prefix of pattern matched till now.

Transition Function -> sigma(q, a) = State into which 'q' transitions after scanning 'a'

Finite State Function -> phi(w) = state after scanning the string w. phi(0-length string) = 0, phi(wa) = sigma(phi(w), a)

Suffix Function -> s(x) = length of the longest prefix of pattern 'P' that is also a suffix of 'x'. s(x) = phi(x).

compute_transition_func(P):
	m = P.length
	for q = 0..m:
		for each possible character a:
			k = min(m, q+1)
			while P[1..k] is not suffix of P[1..q]a
				k -= 1
			sigma(q, a) = k
	return sigma

match(T, m):
	n = T.length
	q = 0
	for i = 1 to n
		q = sigma(q, T[i])
		if q == m:
			# Match Found!
